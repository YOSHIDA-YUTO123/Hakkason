//================================================
//
// 球敵 [enemysphere.cpp]
// Author: KENSAKU HATORI
//
//================================================

// インクルード
#include "enemysphere.h"

//================================================
// コンストラクタ
//================================================
CEnemySphere::CEnemySphere()
{
}

//================================================
// デストラクタ
//================================================
CEnemySphere::~CEnemySphere()
{
}

//================================================
// 初期化処理
//================================================
HRESULT CEnemySphere::Init(void)
{
	// 初期化処理
	CEnemy::Init();

	// 正常終了
	return S_OK;
}

//================================================
// 終了処理
//================================================
void CEnemySphere::Uninit(void)
{
	// 終了処理
	CEnemy::Uninit();
}

//================================================
// 更新処理
//================================================
void CEnemySphere::Update(void)
{
	// 更新処理
	CEnemy::Update();
}

//================================================
// 描画処理
//================================================
void CEnemySphere::Draw(void)
{
	// 描画処理
	CEnemy::Draw();
}

//================================================
// 生成
//================================================
CEnemySphere* CEnemySphere::Create(D3DXVECTOR3 Pos)
{
	// メモリ確保するためのインスタンスを宣言
	CEnemySphere* Instance = nullptr;

	// 3Dオブジェクトの生成
	Instance = new CEnemySphere;

	// インスタンスが生成できなかったら
	if (Instance == nullptr) return nullptr;

	// 初期化処理
	Instance->Init();
	Instance->SetPosition(Pos);

	// モデルを読み込む
	Instance->LoadModel("EnemySphere.x");

	// インスタンスを返す
	return Instance;
}